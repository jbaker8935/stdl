{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "STDL",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#entryExitHandlers"
    },
    {
      "include": "#state"
    },
    {
      "include": "#action"
    },
    {
      "include": "#transition"
    },
    {
      "include": "#condition"
    },
    {
      "include": "#event"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#initialPseudoState"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.stdl",
          "match": "\\b(None Defined At This Time)\\b"
        },
        {
          "name": "keyword.control.stdl",
          "match": "\\b(Initial)\\b"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.stdl",
          "match": "//.*$"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.stdl",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.stdl",
          "match": "\\\\."
        }
      ]
    },
    "entryExitHandlers": {
      "patterns": [
        {
          "match": "^\\s*(OnEntry|OnExit)\\b",
          "name": "entity.name.function.stdl"
        }
      ]
    },
    "state": {
      "patterns": [
        {
          "match": "^\\s*(\\w[^#]*)\\b",
          "captures": {
            "1": {
              "name": "entity.name.class.stdl"
            }
          }
        }
      ]
    },
    "action": {
      "patterns": [
        {
          "match": "^(\\s*\\/\\s*)(\\w[\\w\\s]*)(.*)$",
          "captures": {
            "1": {
              "name": "keyword.operator.action.stdl"
            },
            "2": {
              "name": "meta.function-call.stdl"
            },
            "3": {
              "patterns": [
                {
                  "include": "#strings"
                },
                {
                  "include": "#comments"
                }
              ]
            }
          }
        }
      ]
    },
    "event": {
      "patterns": [
        {
          "match": "^(\\s*-\\s*)(\\w[^\\s\\[#]*)",
          "captures": {
            "1": {
              "name": "keyword.operator.event.stdl"
            },
            "2": {
              "name": "entity.name.function.stdl"
            }
          }
        }
      ]
    },
    "transition": {
      "patterns": [
        {
          "match": "^(\\s*->\\s*)(\\w[^#\/]*)?(\\s*//.*)?$",
          "captures": {
            "1": {
              "name": "keyword.operator.transition.stdl"
            },
            "2": {
              "name": "entity.name.class.stdl"
            },
            "3": {
              "name": "comment.line.double-slash.stdl"
            }
          }
        }
      ]
    },
    "condition": {
      "patterns": [
        {
          "match": "\\[(.*?)\\]",
          "captures": {
            "0": {
              "name": "meta.guard.stdl"
            },
            "1": {
              "name": "variable.parameter.stdl"
            }
          }
        }
      ]
    },
    "initialPseudoState": {
      "patterns": [
        {
          "match": "^(\\s*)(Initial)\\b",
          "captures": {
            "2": {
              "name": "keyword.control.stdl"
            }
          }
        }
      ]
    }
  },
  "scopeName": "source.stdl"
}
